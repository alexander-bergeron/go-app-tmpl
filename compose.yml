services:
  swagger:
    # image: swaggerapi/swagger-ui
    build:
      context: .
      dockerfile: Dockerfile.swagger
    environment:
      SWAGGER_JSON: /mnt/api.swagger.json
    ports:
      - "8081:8080"
    volumes:
      - ./gen/openapiv2/:/mnt
    depends_on:
      - postgres
      - proto

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    environment:
      DB_HOST: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
    ports:
      - "3000:3000"
    volumes: # temp approach
      - ./certs/:/certs
    depends_on:
      - postgres
      - proto

  proto:
    build:
      context: .
      dockerfile: Dockerfile.server
    environment:
      DB_HOST: postgres
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
    ports:
      - "8080:8080"
      - "9090:9090"
    volumes: # temp approach
      - ./certs/:/certs
    depends_on:
      - postgres
  
  postgres:
    image: postgres:17-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -h 127.0.0.1"]
      interval: 2s
      timeout: 10s
      retries: 5

  migrate:
    image: migrate/migrate
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./migrations/:/migrations
    command: ["-path", "/migrations/", "-database",  "postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable", "up"]

